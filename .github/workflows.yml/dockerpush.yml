name: CI with SemVer and Conventional Commits

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu:20.04
    steps:
      - uses: actions/checkout@v4.2.1

      - name: Docker Login
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKERUSER }}
          password: ${{ secrets.PASSWORD }}

      - name: Determine version
        id: determine_version
        run: |
          latest_tag=$(git describe --tags --abbrev=0 --match "v[0-9]*.[0-9]*.[0-9]*")

          changes=$(git log --oneline --since="$latest_tag" --pretty="%s")
          if [[ $changes =~ feat ]]; then
            echo ::set-output name=version::$latest_tag | awk -F. '{ print $1"."($2+1)".0" }'
          elif [[ $changes =~ fix ]]; then
            echo ::set-output name=version::$latest_tag | awk -F. '{ print $1"."$2"."($3+1) }'
          elif [[ $changes =~ chore ]]; then
            # For chore commits, keep the same version
            echo ::set-output name=version::$latest_tag
          else
            # Handle other commit types as needed
            echo ::set-output name=version::$latest_tag
          fi

      - name: Build and push Docker images
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75
        with:
          context: .
          file: .
          push: true
          tags: |
            laranjeirajuliano/online-store:${{ steps.determine_version.outputs.version }}
            laranjeirajuliano/online-store:latest

      - name: Create a Git tag
        run: git tag v${{ steps.determine_version.outputs.version }}-${{ github.sha }}
      - name: Push the Git tag
        run: git push origin v${{ steps.determine_version.outputs.version }}-${{ github.sha }}
